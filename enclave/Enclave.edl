// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

enclave {
    from "sgx_tstd.edl" import *;
    from "sgx_stdio.edl" import *;
    from "sgx_backtrace.edl" import *;
    from "sgx_tstdc.edl" import *;

    struct sgx_ec256_signature_t {
        uint32_t x[8];
        uint32_t y[8];
    };

    trusted {
        /* define ECALLs here. */


        public uint8_t ecall_get([in, count=key_len] uint8_t* key_ptr, size_t key_len, 
                [in, count=nonce_len] uint8_t* nonce_ptr, size_t nonce_len, 
                [user_check] uint8_t* value_ptr, [user_check] size_t* value_len,
                [out] sgx_ec256_signature_t* sig);  
        public uint8_t ecall_update([in, count=key_len] uint8_t* key_ptr, size_t key_len, 
                uint8_t op, [in] uint8_t hash[20],
                [in, count=oproof_len] uint8_t* oproof_ptr, size_t oproof_len,
                [in, count=nproof_len] uint8_t* nproof_ptr, size_t nproof_len);

    };

};
